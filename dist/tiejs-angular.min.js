/*!
 TieJS - http://develman.github.io/tiejs
 Licensed under the MIT license
 Copyright (c) 2014 Georg Henkel <georg@develman.de>, Christoph Huppertz <huppertz.chr@gmail.com>
 */
angular.module("tiejs-ang",["angular.css.injector"]).directive("tiejsForm",["cssInjector",function(e){return{restrict:"E",scope:{formName:"@formName",showRequiredAsterisk:"@showRequiredAsterisk",fields:"=fields",bindings:"=bindings",bindingSource:"=bindingSource",onSubmit:"=onSubmit",submitButtonId:"@submitButtonId",reloadFlag:"=reloadFlag"},template:"<form></form>",link:function(t,n,r){var i=function(e,n){t.bindings.forEach(function(t){var r=t[e.data.name];if(r)n.push(r)})};var s=function(t,n,r){var s=[];var o=[];var u=[];var a=[];var f=[];var l=function(e){e.forEach(function(e){switch(e.type){case"color":i(e,s);break;case"date":i(e,o);break;case"time":i(e,u);break;case"wysiwyg":i(e,a);break;case"tags":i(e,f);break}})};var c={showRequiredAsterisk:t.showRequiredAsterisk,formName:t.formName,bindingSource:t.bindingSource,onSubmit:t.onSubmit};var h=n.find("form");h.TieJS(c);var p=h.data("tiejs");t.fields.forEach(function(e){if(e.fieldData){if(e.fieldType==="field"){p.addFields(e.fieldData)}else if(e.fieldType==="column"){p.addColumns(e.fieldData)}else{if(console)console.log("tiejs-directive: unknown type of field (only type -field- and -column- are allowed)")}l(e.fieldData)}});p.addBindings(t.bindings);var d=[];if(s.length>0){var v=h.find(".color");for(var m=0;m<s.length;m++){var g=$(v[m]).colorpicker({color:"#"+t.bindingSource[s[m]]});g.on("changeColor",function(e){var n=e.color.toHex();var r=$(e.currentTarget).find("input").attr("name");t.bindingSource[r]=n.replace("#","")});d.push(g)}}var y=[];if(o.length>0){var b=h.find(".date");for(var m=0;m<o.length;m++){var w=$(b[m]).datetimepicker({language:"de",pickTime:false,showToday:true,daysOfWeekDisabled:[0]});w.on("dp.change",function(e){var n=$(e.currentTarget).find("input").attr("name");t.bindingSource[n]=e.date.format("DD.MM.YYYY")});y.push(w)}}var E=[];if(u.length>0){var S=h.find(".time");for(var m=0;m<u.length;m++){var x=$(S[m]).clockpicker({placement:"bottom",align:"left",autoclose:"true"}).find("input").change(function(){var e=$(this).attr("name");t.bindingSource[e]=$(this).val()});E.push(w)}}var T=[];if(a.length>0){var N=h.find(".wysiwyg");for(var m=0;m<a.length;m++){var C=$(N[m]).summernote({height:400,onkeydown:function(e){var n=$(e.currentTarget).parent().prev("div.wysiwyg").attr("name");t.bindingSource[n]=$(this).code()},toolbar:[["style",["bold","italic","underline","strikethrough","clear"]],["font",["strikethrough"]],["fontsize",["fontsize"]],["color",["color"]],["para",["ul","ol","paragraph"]],["height",["height"]]]});var k=$(N[m]).attr("name");C.code(t.bindingSource[k]);T.push(C)}}var L=[];if(f.length>0){var A=h.find(".tags");for(var m=0;m<f.length;m++){var O=$(A[m]).chosen({width:"100%"});O.change(function(e,n){var r=$(e.currentTarget).attr("name");var i=$(e.currentTarget).find("option:selected");if(n.selected){i.each(function(){t.bindingSource[r].push($(this).val())})}else{var s=t.bindingSource[r].indexOf(n.deselected);t.bindingSource[r].splice(s,1)}});L.push(O)}}if(e){if(d.length>0){e.add("/public/js/lib/mjolnic-bootstrap-colorpicker/dist/css/bootstrap-colorpicker.min.css")}if(y.length>0){e.add("/public/js/lib/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css")}if(E.length>0){e.add("/public/js/lib/clockpicker/dist/bootstrap-clockpicker.min.css")}if(L.length>0){e.add("/public/js/lib/chosen/chosen.css")}if(T.length>0){e.add("/public/js/lib/summernote/dist/summernote.css")}}$("#"+t.submitButtonId).on("click",function(){h.trigger("submit")})};s(t,n,r);if(t.reloadFlag){t.$watch("reloadFlag",function(){$(n).find("form").children().remove();s(t,n,r)})}}}}])